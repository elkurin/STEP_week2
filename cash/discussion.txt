idea1.cppでは、双方向リストを用いて出し入れをしている。
重複を取り除こうとすると時間がかかるので、計算量を落とすために重複を無視して入れつづけている。
この場合、挿入や削除にはO(1)の計算量であり、ただmapの部分でO(logK)を用いている。なんならunordered_mapに変えることで、O(1)に出来る。もし最初からサイトの数が分かっているならば、それで配列をとれば良い。

この考えの問題点は、最悪の場合に大量のメモリを消費してしまう。
例えば
1 2 1 2 1 2 1 2 1 2 1 2 1 2 ....
という風に入ってきた場合、なにも処理されずそのまま全部リストに入れられてしまう。
なので、普段はサイトを開く度にどんどん入れていくが、1週間に1回とかのペースで、「リストの整理」(idea1.cppにおけるclean()関数)を行う。
こうすることで、「ほぼ」O(1)にできる。
